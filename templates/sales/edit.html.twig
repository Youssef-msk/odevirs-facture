{% extends 'base.html.twig' %}
   {% block title %}
{% if app.current_route != "app_sales_new" %}
Modification/Consultation bon livraison
{% else %}
    Ajout bon livraison
{% endif %}
   {% endblock %}


{% block body %}
    {{ form_start(form,{'attr': {'class': 'saveForm','id': 'saveForm'}}) }}

    <div class="content-page">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="d-flex flex-wrap align-items-center justify-content-between mb-3">
                        <div class="d-flex align-items-center justify-content-between">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb p-0 mb-0">
                                    <li class="breadcrumb-item"><a href="{{ path('app_sales_index') }}">Bons de livraison</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">Ajout nouveau bon de livraison</li>
                                </ol>
                            </nav>
                        </div>
                        {% if app.current_route != "app_sales_new" %}
                        <a class="btn btn-primary btn-sm" href="{{ path('app_sales_bl',{'id':sale.id}) }}" target="_blank">
                            <svg xmlns="http://www.w3.org/2000/svg" class="mr-2" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                            </svg>
                            Télécharger bon de livraison N° {{ sale.reference }}
                        </a>
                        {% endif %}
                    </div>
                </div>
                {% if app.current_route != "app_sales_new" %}
                    {% if not sale.generatedInvoice %}
                        <div class="col-lg-12 mb-3">
                            <div class="d-flex justify-content-between align-items-end">
                                <h4 class="font-weight-bold">Consultation/Modification bons de livraison</h4>
                                <a class="btn btn-primary btn-sm" href="{{ path('app_sales_invoice',{'id':sale.id}) }}" target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="mr-2" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                    </svg>
                                    Facturer le bon de livraison
                                </a>
                            </div>
                        </div>
                    {% endif %}

                    {% if sale.generatedInvoice == 1 %}
                        <div class="col-lg-12 mb-3">
                            <div class="d-flex justify-content-between align-items-end">
                                <h4 class="font-weight-bold">Consultation/Modification bons de livraison</h4>

                                <a class="btn btn-primary btn-sm" href="{{ path('app_sales_invoice',{'id':sale.id}) }}" target="_blank">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="mr-2" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                    </svg>
                                    Télécharger la facture N° {{ sale.invoiceNumber }}
                                </a>
                            </div>
                        </div>
                    {% endif %}
                {% endif %}
            </div>
            <div class="card">
                <div class="d-flex justify-content-between align-items-end p-1">
                    <h5 class="font-weight-bold"></h5>
                    <button type="button" class="btn btn-secondary btn-sm" data-toggle="modal" data-target=".modal-add-customer">
                        <svg xmlns="http://www.w3.org/2000/svg" class="mr-1" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        Ajouter un nouveau client
                    </button>

                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="row g-3">
                                <div class="col-md-6 mb-3">
                                    <label  class="form-label font-weight-bold text-muted text-uppercase">Référence :</label>
                                    {{ form_widget(form.reference,{'attr': {'class': 'form-control','readonly':'readonly'}}) }}
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label  class="form-label font-weight-bold text-muted text-uppercase">Client :</label>
                                    {{ form_widget(form.customer,{'attr': {'class': 'form-select form-control choicesjsSelect2'}}) }}

                                </div>
                                <div class="col-md-6 mb-3">
                                    <label  class="form-label font-weight-bold text-muted text-uppercase">Mode paiement :</label>
                                    {{ form_widget(form.paymentMode,{'attr': {'class': 'form-select form-control'}}) }}
                                </div>
                                <div class="col-md-6 mb-3 hidden" id="paymentReference">
                                    <label  class="form-label font-weight-bold text-muted text-uppercase">N° (chèque/effet) :</label>
                                    {{ form_widget(form.paymentReference,{'attr': {'class': 'form-select form-control'}}) }}
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="row g-3">
                                <div class="col-md-6 mb-3">
                                    <label for="Text6" class="form-label font-weight-bold text-muted text-uppercase">Bon de commande :</label>
                                    {{ form_widget(form.bonCommande,{'attr': {'class': 'form-select form-control'}}) }}
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="Text6" class="form-label font-weight-bold text-muted text-uppercase">Statut :</label>
                                    {{ form_widget(form.status,{'attr': {'class': 'form-select form-control'}}) }}
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="Text6" class="form-label font-weight-bold text-muted text-uppercase">Date :</label>
                                    <input type="date" name="salesDate" class="form-control" value="{{ currentDate is defined and currentDate  ? currentDate :sale.createdAt|date('Y-m-d') }}">
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="Text8" class="form-label font-weight-bold text-muted text-uppercase">Date Echéance :</label>
                                    <input type="date" id="sales_echeance" name="sales[echeance]" class="form-control" placeholder="Date Echéance ..." value="{{ sale.echeance }}">
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="row g-3">
                                <div class="col-md-6 mb-3">
                                    <label for="Text8" class="form-label font-weight-bold text-muted text-uppercase">Commentaire :</label>
                                    {{ form_widget(form.comment,{'attr': {'class': 'form-control','placeholder':'Commentaire ...'}}) }}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                {{ form_widget(form._token) }}
            </div>
            <div class="card">
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush">
                        <li class="d-flex justify-content-between align-items-center p-3">
                            <h5 class="font-weight-bold">Liste des produits</h5>
                            <button class="btn btn-secondary btn-sm addNewProductButton" type="button">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5" stroke="currentColor" class="mr-1">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
                                </svg>
                                Ajouter un produit
                            </button>
                        </li>
                        <li class="list-group-item p-0">
                        </li>
                        <li class="list-group-item p-0">
                            <div class="table-responsive">
                                <table class="table data-table-without-options mb-0" id="salesProducts">
                                    <thead class="table-color-heading">
                                    <tr class="text-light">
                                        <th scope="col">
                                            <label class="text-muted m-0" >Produit</label>
                                        </th>
                                        <th scope="col">
                                            <label class="text-muted mb-0" >Quantity</label>
                                        </th>
                                        <th scope="col" class="text-left">
                                            <label class="text-muted mb-0" style="min-width:100px;">PU HT (DH)</label>
                                        </th>
                                        <th scope="col" class="text-left" style="min-width:100px;">
                                            <label class="text-muted mb-0" >Taxe (DH)</label>
                                        </th>
                                        <th scope="col" class="text-left" style="min-width:100px;">
                                            <label class="text-muted mb-0" >PU TTC (DH)</label>
                                        </th>
                                        <th scope="col" class="text-left" style="min-width:100px;">
                                            <label class="text-muted mb-0" >PT TTC (DH)</label>
                                        </th>
                                        <th scope="col" class="text-right">
                                            <span class="text-muted" >Action</span>
                                        </th>
                                    </tr>
                                    </thead>
                                    <tbody id="salesProductsBody">
                                    {% for itemProduct in sale.salesProducts %}
                                        <tr class="white-space-no-wrap odd productRow{{ itemProduct.product.id }}"  data-productRow="{{ itemProduct.product.id }}">
                                            <td class="">
                                                <div class="active-project-1 d-flex align-items-center mt-0 ">
                                                    <input type="hidden" class="selectedProductItems" name="dataSalesProducts[{{ itemProduct.product.id }}][id]" value="{{ itemProduct.product.id }}">
                                                    <div class="h-avatar is-medium">
                                                        <img class="avatar rounded" onerror="this.onerror=null;this.src='{{ asset('data/images/products/default.png') }}';"  alt="{{ itemProduct.product.name }}" src="{{ vich_uploader_asset(itemProduct.product, 'imageFile') }}">
                                                    </div>
                                                    <div class="data-content">
                                                        <div>
                                                            <span class="font-weight-bold">{{ itemProduct.product.nameCommerciale }}</span>
                                                        </div>
                                                        <p class="m-0 mt-1">
                                                            REF: {{ itemProduct.product.ref }}
                                                        </p>
                                                    </div>
                                                </div>
                                            </td>

                                            <td>
                                                <input type="number" name="dataSalesProducts[{{ itemProduct.product.id }}][quantity]" class="form-control form-control-sm" id="quantity" placeholder="Quantity" value="{{ itemProduct.quantity }}" onchange="calculateQuantityTrigger({{ itemProduct.product.id }})" onkeyup="calculateQuantityTrigger({{ itemProduct.product.id }})" onkeydown="calculateQuantityTrigger({{ itemProduct.product.id }})">
                                            </td>
                                            <td>
                                                <input type="text" readonly="readonly" name="dataSalesProducts[{{ itemProduct.product.id }}][priceHt]" class="form-control form-control-sm" id=priceHt" placeholder="Prix HT" value="{{ itemProduct.priceHt|number_format(2, ',','') }}">
                                                <input type="hidden" name="dataSalesProducts[{{ itemProduct.product.id }}][priceTotalHt]" class="form-control form-control-sm sumPriceTotalHt" id=priceTotalHt" placeholder="Prix Total HT" value="{{ itemProduct.priceTotalHt }}">
                                            </td>
                                            <td>
                                                <input type="text" readonly="readonly"  name="dataSalesProducts[{{ itemProduct.product.id }}][taxe]" class="form-control form-control-sm sumTotalTaxe"  id=taxe" placeholder="Taxe"  value="{{ itemProduct.taxe|number_format(2, ',','') }}">
                                                <input type="hidden" name="dataSalesProducts[{{ itemProduct.product.id }}][taxeType]" class="form-control form-control-sm sumPriceTotalHt" id=taxeType"  value="{{ itemProduct.taxeType }}">

                                            </td>
                                            <td>
                                                <input type="text" name="dataSalesProducts[{{ itemProduct.product.id }}][priceTtc]" class="form-control form-control-sm"  id=priceTtc" placeholder="Taxe" value="{{ itemProduct.priceTtc|number_format(2, ',','') }}" onchange="calculateQuantityTrigger({{ itemProduct.product.id }})" onkeyup="calculateQuantityTrigger({{ itemProduct.product.id }})" onkeydown="calculateQuantityTrigger({{ itemProduct.product.id }})">
                                            </td>
                                            <td class="text-left">
                                                <input type="text" name="dataSalesProducts[{{ itemProduct.product.id }}][priceTotalTtc]" readonly="readonly" class="form-control form-control-sm sumPriceTotalTtc"  id=PriceTotalTtc" placeholder="Prix Total TTC" value="{{ itemProduct.priceTotalTtc|number_format(2, ',','') }}">
                                            </td>
                                            <td>
                                                <div class="d-flex justify-content-end align-items-center">
                                                    <a class="badge bg-danger delete-confirm" onclick="deleteProductRow({{ itemProduct.product.id }})" data-toggle="tooltip" data-placement="top" title="" data-original-title="Supprimer" data-href="/crm/products/delete/2?_token=14848022687ebc82633.8m0hU1ZGrABYUbbkH_poMWEHWHf5ER9zd5ytb0Ftzto.phxpfjdz-FovKPjUZYBdWQBQG0OpRC4YGt3POHdf-JWZBkU_GCyVZjwU_w">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                        </svg>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    {% endfor %}

                                    </tbody>

                                </table>
                            </div>
                        </li>
                        <li class="list-group-item">
                            <div class="d-flex justify-content-end mb-2">
                                TOTAL HT: <p class="ml-2 mb-0" id="sumPriceTotalHtLabel">00,00</p>
                                <input type="hidden" name="sumPriceTotalHtLabel" class="sumPriceTotalHtLabel" value="0">
                            </div>
                            <div class="d-flex justify-content-end mb-2">
                                TVA : <p class="ml-2 mb-0" id="sumTotalTaxeLabel">00,00</p>
                                <input type="hidden" name="sumTotalTaxeLabel" class="sumTotalTaxeLabel" value="0">

                            </div>
                            <div class="d-flex justify-content-end mb-2">
                                Montant NET TTC (MAD) : <p class="ml-2 mb-0 font-weight-bold" id="sumPriceTotalTtcLabel">00,00</p>
                                <input type="hidden" name="sumPriceTotalTtcLabel" class="sumPriceTotalTtcLabel" value="0">
                            </div>
                        </li>
                        <div class="d-flex flex-wrap justify-content-between align-items-center p-4">
                            <div class="flex align-items-start flex-column">
                                <h6>Notes</h6>
                                <p class="mb-0 my-2" style="color: red">Une fois que vous avez apporté les modifications nécessaires aux lignes de l'article,<br> n'oubliez pas de cliquer sur le bouton "Enregistrer" pour les appliquer.</p>
                            </div>
                            <div>
                                <button class="btn btn-secondary px-4" disabled>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="mr-1" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5" />
                                    </svg>
                                    Envoyer la facture
                                </button>
                                <button class="btn btn-primary px-4" type="submit">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="mr-1" width="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12" />
                                    </svg>
                                    Sauvegarder
                                </button>
                            </div>
                        </div>
                        <div style="display: none">
                            <input type="text" name="newProductRowData[idSelectedProduct]" id="idSelectedProduct" class="idSelectedProduct" value="0">
                            <input type="text" id="isSelectedNewProduct" class="isSelectedProduct" value="0">
                            <input type="number" name="newProductRowData[newProductQuantity]" class="form-control form-control-sm triggerCalculateNewLigne" id="newProductQuantity" placeholder="Quantity">
                            <input type="text" readonly="readonly" name="newProductRowData[newProductPriceHt]" class="form-control form-control-sm triggerCalculateNewLigne" id="newProductPriceHt" placeholder="Prix HT">
                            <input type="text" name="newProductRowData[newProductPriceTotalHt]" class="form-control form-control-sm triggerCalculateNewLigne" id="newProductPriceTotalHt" placeholder="Prix HT">
                            <input type="text" readonly="readonly" name="newProductRowData[newProductTaxe]" class="form-control form-control-sm triggerCalculateNewLigne"  id="newProductTaxe" placeholder="Taxe">
                            <input type="text" readonly="readonly" name="newProductRowData[newProductRateType]" class="form-control form-control-sm triggerCalculateNewLigne"  id="newProductRateType" placeholder="Taxe Type">
                            <input type="text" name="newProductRowData[newProductPriceTtc]" class="form-control form-control-sm triggerCalculateNewLigne"  id="newProductPriceTtc" placeholder="Taxe">
                            <input type="text" readonly="readonly" name="newProductRowData[newProductPriceTotalTtc]" class="form-control form-control-sm triggerCalculateNewLigne"  id="newProductPriceTotalTtc" placeholder="Prix Total TTC">
                        </div>
                    </ul>
                </div>
            </div>
        </div>

    </div>

    {{ form_end(form, {'render_rest': false}) }}

    <div class="modal fade modal-add-customer" tabindex="-1" role="dialog"  aria-hidden="true">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ajout nouveau client</h5>
                    <button type="button" class="close button-modal-add-customer" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="saleNewCustomer" method="post">
                        <div class="form-group">
                            <label for="company">Raison sociale:</label>
                            <input type="text" class="form-control form-control-sm" name="newCustomer[company]" id="company">
                        </div>
                        <div class="form-group">
                            <label for="ice">ICE:</label>
                            <input type="text" class="form-control form-control-sm" name="newCustomer[ice]" id="ice">
                        </div>
                        <div class="form-group">
                            <label for="adresse">Adresse:</label>
                            <input type="text" class="form-control form-control-sm" name="newCustomer[adresse]" id="adresse">
                        </div>
                        <div class="form-group">
                            <label for="mail">Téléphone:</label>
                            <input type="text" class="form-control form-control-sm" name="newCustomer[tel]" id="tel">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-secondary" id="addNewCutomer">Sauvegarder</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascriptfooter %}
    <script>
        $(document).ready(function(){

            $(".choicesjsSelect2").select2({
                placeholder: 'Séléctionner un client',
                allowClear: true
            });


            $('#addNewCutomer').click(function() {
                var form = $('#saleNewCustomer');
                $.ajax({
                    type:"POST",
                    url : "{{ path('app_customers_sales_add') }}",
                    data: form.serialize(),
                    success : function(response) {
                        if(response == "nok_rs"){
                            swal("Raison sociale obligatoire", "", "error");
                        }else{
                            swal("Client ajouté", "", "success");
                            // Create the DOM option that is pre-selected by default
                            var newState = new Option(response.company, response.id, true, true);
                            // Append it to the select
                            $(".choicesjsSelect2").append(newState).trigger('change');
                            $('#saleNewCustomer').trigger("reset");
                            $('.button-modal-add-customer').click();
                        }
                    },
                    error: function() {
                        alert('le champs Raison sociale est obligatoire');
                    }
                });
            });


            $('#sales_paymentMode').change(function () {
                if ($(this).val() === '1' || $(this).val() === '2') {
                    $('#paymentReference').removeClass('hidden');
                } else {
                    $('#paymentReference').addClass('hidden');
                    $('#sales_paymentReference').val('');
                }

                if ($(this).val() === '3' || $(this).val() === '3') {
                    $('#sales_echeance').addClass('hidden');
                } else {
                    $('#sales_echeance').removeClass('hidden');
                }
            });
            $('#sales_paymentMode').change();
            calculateSumFooterElements();

            $('.triggerCalculateNewLigne').keypress(function(event) {
                var charCode = event.which;
                var inputValue = String.fromCharCode(charCode);

                // Allow digits (0-9), decimal point (.), and minus sign (-)
                if (!/[\d,-]/.test(inputValue)) {
                    event.preventDefault(); // Prevent the key press from being entered into the input field
                }

                // Ensure only one decimal point is entered
                if (inputValue === ',' && this.value.includes(',')) {
                    event.preventDefault(); // Prevent the key press from being entered into the input field
                }
            });

            $('.data-table-without-options').DataTable({
                paging: false,
                ordering: false,
                info: false,
                searching: false
            });

            $('.remove-product-btn').on('click', function(event, selection) {
                $(this).closest('tr').remove();
            });

            /* var searchProducts = $('.swal-content__input').magicSuggest({
                 data: '{{ path('app_products_search') }}',
                valueField: 'id',
                displayField: 'name',
                allowFreeEntries: false,
                maxSelection: 1,
                renderer: function(data){
                    return '<div class="active-project-1 d-flex align-items-center mt-0"><div class="h-avatar is-medium">' +
                        '<img class="avatar rounded" alt="DESIGNATION" src="data/images/products/' + data.picture + '" />' +
                        '</div><div class="data-content"><div><span class="font-weight-bold">' + data.name +
                        '</span></div><p class="m-0 mt-1">REF:' + data.ref +
                        '</p></div></div>';
                }
            });*/



            /*$(searchProducts).on('selectionchange', function(event, selection) {
                var selectedValue = this.getValue();

                if(selectedValue){
                    var selectedProduct = selectedValue[0];
                    var urlInfos = "{{ path('app_products_infos',{'id': 'selectedProduct'}) }}";
                    $.ajax({
                        type: "GET",
                        url : urlInfos.replace("selectedProduct", selectedProduct),
                        async: false,
                        success : function(response) {
                            console.log(response)
                            if(response && response !== '' && response != "product not found"){
                                //prix ht
                                $("#newProductPriceHt").val(response.priceHt.toString().replace(".",","));
                                $("#newProductPriceTotalHt").val((response.priceHt * 1));
                                //prix ttc
                                $("#newProductPriceTtc").val(response.price.toString().replace(".",","));
                                //valeur tva
                                $("#newProductTaxe").val(response.rate ? response.rate.toString().replace(".",",") : "");
                                $("#newProductRateType").val(response.rateType ? response.rateType : "");
                                //
                                $("#isSelectedProduct").val(1);
                                //quantity
                                $("#newProductQuantity").val(1);
                                $('#newProductQuantity').attr('min', 0); // Set the minimum value
                                $('#newProductQuantity').attr('max', response.quantity); // Set the maximum value
                                //id produit
                                $("#idSelectedProduct").val(selectedProduct);
                                //trigger calculate

                                calculatePtNewProduct();
                            }else{
                                //prix ht
                                $("#newProductPriceHt").val(0);
                                $("#newProductPriceTotalHt").val(0);
                                //prix ttc
                                $("#newProductPriceTtc").val(0);
                                //valeur tva
                                $("#newProductTaxe").val(0);
                                $("#newProductRateType").val("default_taxe");
                                //
                                $("#isSelectedProduct").val(0);
                                //quantity
                                $("#newProductQuantity").val(0);
                                //id produit
                                $("#idSelectedProduct").val(0);
                            }
                        },
                        error: function() {
                            alert('Error occured');
                        }
                    });
                }
            });*/

            $('.triggerCalculateNewLigne').change(function() {
                calculatePtNewProduct();
            });

            $('.triggerCalculateNewLigne').on('keyup', function(event, selection) {
                calculatePtNewProduct();
            });


            /*$('#sales_customer').change();
            $('#sales_customer').change(function() {
                var customer = $(this).val();
                var urlInfos = "{{ path('app_customers_infos',{'id': 'customerId'}) }}";
                $.ajax({
                    type:"GET",
                    url : urlInfos.replace("customerId", customer),
                    async: false,
                    success : function(response) {
                        $("#iceCustomer").val(response.ice);
                        $("#contactCustomer").val(response.phone+" - "+response.email);
                        $("#addresseCustomer").val(response.address+" - "+response.zipcode);
                    },
                    error: function() {
                        alert('Error occured');
                    }
                });
            });*/


            $('#sales_customer').change();
        });

        function calculatePtNewProduct(){
            var priceHt = $("#newProductPriceHt").val();
            var rate = $("#newProductTaxe").val();
            var quantity = $("#newProductQuantity").val();
            var priceTtc = $("#newProductPriceTtc").val();

            $("#newProductPriceTotalHt").val((parseFloat(priceHt.replace(/,/g, ".")) * parseInt(quantity)).toFixed(2).toString().replace(".",","));
            $("#newProductPriceTotalTtc").val((parseFloat(priceTtc.replace(/,/g, ".")) * parseInt(quantity)).toFixed(2).toString().replace(".",","));
            $("#newProductTaxe").val((( (parseFloat(priceTtc.replace(/,/g, ".")) / 1.2) * 0.2 ) * parseInt(quantity)).toFixed(2).toString().replace(".",","));

            calculateSumFooterElements();

        }


        $('#newProductPriceTtc').on('change',function(){
            calculatePricesFromTaxe()
        });

        $('.addNewProductButton').on('click',function(){
            swal({
                title: "Rechercher un article",
                content: "input",
                className: 'custom-class',
                buttons: {
                    cancel: 'Cancel',
                    confirm: 'OK'
                }
            })
                .then(message => {
                    var formData = $('input[name^="newProductRowData"]').serializeArray();

                    var newProductDataRow = {};
                    formData.forEach(function(item) {
                        var name = item.name.replace('newProductRowData[', '').replace(']', '');
                        newProductDataRow[name] = item.value;
                    });

                    if(newProductDataRow && newProductDataRow.newProductPriceTtc !== "" ){
                        var url = "{{ path('app_products_view_new_row') }}";
                        $.ajax({
                            type: "GET",
                            url : url,
                            data: newProductDataRow,
                            async: false,
                            success : function(response) {
                                //$('#salesProducts tr.zoneAddNewProduct').before(response);
                                var newRow = $(response);
                                $('#salesProductsBody').append(newRow);
                            },
                            error: function() {
                                alert('Error occured');
                            }
                        });
                    }


                    calculateSumFooterElements();
                });

            var alreadySelectedProducts = "?alreadySelectedProducts=0";
            $('.selectedProductItems').each(function() {
                var value = $(this).val();
                alreadySelectedProducts += "," + value ;
            });

            var pathSerachProducts = "{{ path('app_products_search') }}" + alreadySelectedProducts;
            var defaultPictureProducts = "{{ asset('data/images/products/default.png') }}";

            console.log(defaultPictureProducts)
            var searchProducts = $('.swal-content__input').magicSuggest({
                data: pathSerachProducts,
                valueField: 'id',
                displayField: 'name',
                allowFreeEntries: false,
                maxSelection: 1,
                renderer: function(data){
                    return '<div class="active-project-1 d-flex align-items-center mt-0"><div class="h-avatar is-medium">' +
                        '<img class="avatar rounded" alt="DESIGNATION" onerror="onErrorEvent(this)" src="data/images/products/' + data.picture + '" />' +
                        '</div><div class="data-content"><div><span class="font-weight-bold">' + data.name +
                        '</span></div><p class="m-0 mt-1">REF:' + data.ref +
                        '</p></div></div>';
                }
            });
// onerror="this.onerror=null;this.src='data/images/products/default.png';"
            $(searchProducts).on('selectionchange', function(event, selection) {
                var selectedValue = this.getValue();
                if(selectedValue){
                    var selectedProduct = selectedValue[0];
                    var urlInfos = "{{ path('app_products_infos',{'id': 'selectedProduct'}) }}";
                    $.ajax({
                        type: "GET",
                        url : urlInfos.replace("selectedProduct", selectedProduct),
                        async: false,
                        success : function(response) {
                            if(response && response != "product not found"){
                                //prix ht
                                $("#newProductPriceHt").val(response.priceHt.toString().replace(".",","));
                                $("#newProductPriceTotalHt").val((response.priceHt * 1));
                                //prix ttc
                                $("#newProductPriceTtc").val(response.price.toString().replace(".",","));
                                //valeur tva
                                $("#newProductTaxe").val(response.rate ? response.rate.toString().replace(".",",") : "");
                                $("#newProductRateType").val(response.rateType ? response.rateType : "");
                                //
                                $("#isSelectedProduct").val(1);
                                //quantity
                                $("#newProductQuantity").val(1);
                                $('#newProductQuantity').attr('min', 0); // Set the minimum value
                                $('#newProductQuantity').attr('max', response.quantity); // Set the maximum value
                                //id produit
                                $("#idSelectedProduct").val(selectedProduct);
                                //trigger calculate

                                calculatePtNewProduct();
                            }else{
                                //prix ht
                                $("#newProductPriceHt").val(0);
                                $("#newProductPriceTotalHt").val(0);
                                //prix ttc
                                $("#newProductPriceTtc").val(0);
                                //valeur tva
                                $("#newProductTaxe").val(0);
                                $("#newProductRateType").val("default_taxe");
                                //
                                $("#isSelectedProduct").val(0);
                                //quantity
                                $("#newProductQuantity").val(0);
                                //id produit
                                $("#idSelectedProduct").val(0);
                            }

                            $(".dataTables_empty").remove();
                        },
                        error: function() {
                            alert('Error occured');
                        }
                    });
                }
            });
        });

        $('#newProductPriceTtc').on('keyup',function(){
            calculatePricesFromTaxe()
        });

        function calculatePricesFromTaxe(){
            var rateValue =  $('#newProductRateType').val();

            if(rateValue == "default_taxe"){
                var newPriceTTc =  (parseFloat($('#newProductPriceTtc').val().replace(/,/g, ".")));
                var newRate  =  (newPriceTTc / 1.2) * 0.2;
                var newPriceHt = (newPriceTTc - newRate);
                $('#newProductPriceHt').val(newPriceHt.toFixed(2).toString().replace(".",","));
            }else {
                var priceTTC = (parseFloat($('#newProductPriceTtc').val().replace(/,/g, "."))); // Price including tax
                var vatRate = parseInt(rateValue) / 100; // 20% VAT rate
                $('#products_rate').val((priceTTC - calculatePriceExcludingTax(priceTTC, vatRate)).toFixed(2));
                $('#products_priceHt').val(calculatePriceExcludingTax(priceTTC, vatRate));
            }
            calculateSumFooterElements();

        }


        function calculatePriceExcludingTax(priceTTC, vatRate) {
            var priceHT = priceTTC / (1 + vatRate);
            return priceHT.toFixed(2); // Round the result to 2 decimal places
        }

        function calculateQuantityTrigger(productId){
            var elementnewProductPriceHt = "dataSalesProducts["+productId+"][priceHt]";
            var $newProductPriceHt = $("[name='" + elementnewProductPriceHt + "']");
            var priceHt = $newProductPriceHt.val();

            var elementnewProductTaxe = "dataSalesProducts["+productId+"][taxe]";
            var $newProductTaxe = $("[name='" + elementnewProductTaxe + "']");
            var rate = $newProductTaxe.val();

            var elementnewProductQuantity = "dataSalesProducts["+productId+"][quantity]";
            var $newProductQuantity = $("[name='" + elementnewProductQuantity + "']");
            var quantity = $newProductQuantity.val();

            var elementnewProductPriceTtc = "dataSalesProducts["+productId+"][priceTtc]";
            var $newProductPriceTtc = $("[name='" + elementnewProductPriceTtc + "']");
            var priceTtc = $newProductPriceTtc.val();

            var elementnewProductPriceTotalHt = "dataSalesProducts["+productId+"][priceTotalHt]";
            var $newProductPriceTotalHt = $("[name='" + elementnewProductPriceTotalHt + "']");
            $newProductPriceTotalHt.val((parseFloat(priceHt.replace(/,/g, ".")) * parseInt(quantity)).toFixed(2).toString().replace(".",","));


            var elementnewProductPriceTotalTtc = "dataSalesProducts["+productId+"][priceTotalTtc]";
            var $newProductPriceTotalTtc = $("[name='" + elementnewProductPriceTotalTtc + "']");
            $newProductPriceTotalTtc.val((parseFloat(priceTtc.replace(/,/g, ".")) * parseInt(quantity)).toFixed(2).toString().replace(".",","));


            var elementnewProductTaxe = "dataSalesProducts["+productId+"][taxe]";
            var $newProductTaxe = $("[name='" + elementnewProductTaxe + "']");
            var taxcalculated = parseFloat(((parseFloat(priceTtc.replace(/,/g, ".")) / 1.2) * 0.2 ).toFixed(2)) * parseInt(quantity)
            $newProductTaxe.val(taxcalculated.toFixed(2).toString().replace(".",","));

            var elementnewProducttaxeType = "dataSalesProducts["+productId+"][taxeType]";
            var $newProductTaxeType = $("[name='" + elementnewProducttaxeType + "']");
            var rateValue =  $newProductTaxeType.val();

            if(rateValue == "default_taxe"){
                var newPriceTTc =  (parseFloat($newProductPriceTtc.val().replace(/,/g, ".")));
                var newRate  =  (newPriceTTc / 1.2) * 0.2;
                var newPriceHt = (newPriceTTc - newRate);

                var elementnewpriceHt = "dataSalesProducts["+productId+"][priceHt]";
                var $newProductelementnewpriceHt = $("[name='" + elementnewpriceHt + "']");
                $newProductelementnewpriceHt.val(newPriceHt.toFixed(2).toString().replace(".",","));
            }

            calculateSumFooterElements();

        }

        function deleteProductRow(productId){
            var elementProductRow = "productRow"+productId+"";
            var $productRow = $("." + elementProductRow + "");
            $productRow.remove();

            calculateSumFooterElements();

        }

        function onErrorEvent(img){
            img.onerror=null;img.src="data/images/products/default.png";

        }





        function calculateSumFooterElements() {

            var sumPriceTotalTtc = 0;
            $('.sumPriceTotalTtc').each(function() {
                var value = parseFloat($(this).val().replace(/,/g, "."));
                if (!isNaN(value)) {
                    sumPriceTotalTtc += value;
                }
            });

            if (sumPriceTotalTtc > 0){
                $("#sumPriceTotalTtcLabel").html(sumPriceTotalTtc.toFixed(2).toString().replace(".",","));
                $(".sumPriceTotalTtcLabel").val(sumPriceTotalTtc.toFixed(2).toString().replace(".",","));

                var newPriceTTc =  (parseFloat($(".sumPriceTotalTtcLabel").val().replace(/,/g, ".")));
                var newRate  =  (newPriceTTc / 1.2) * 0.2;
                var newPriceHt = (newPriceTTc - newRate);

                $("#sumPriceTotalHtLabel").html(newPriceHt.toFixed(2).toString().replace(".",","));
                $(".sumPriceTotalHtLabel").val(newPriceHt.toFixed(2).toString().replace(".",","));

                $("#sumTotalTaxeLabel").html(newRate.toFixed(2).toString().replace(".",","));
                $(".sumTotalTaxeLabel").val(newRate.toFixed(2).toString().replace(".",","));
            }else {
                $("#sumPriceTotalTtcLabel").html("00,00");
                $(".sumPriceTotalTtcLabel").val("00,00");

                $("#sumPriceTotalHtLabel").html("00,00");
                $(".sumPriceTotalHtLabel").val("00,00");

                $("#sumTotalTaxeLabel").html("00,00");
                $(".sumTotalTaxeLabel").val("00,00");
            }


            /*var sumTotalHt = 0;
            $('.sumPriceTotalHt').each(function() {
                var value = parseFloat($(this).val().replace(/,/g, "."));
                if (!isNaN(value)) {
                    console.log(value)

                    sumTotalHt += value;

                }
            });

            if (sumTotalHt > 0){
                if (parseFloat(sumTotalHt) > 1){
                    $("#sumPriceTotalHtLabel").html(Math.round(sumTotalHt).toFixed(2).toString().replace(".",","));
                    $(".sumPriceTotalHtLabel").val(Math.round(sumTotalHt).toFixed(2).toString().replace(".",","));

                }else {
                    $("#sumPriceTotalHtLabel").html(sumTotalHt.toFixed(2).toString().replace(".",","));
                    $(".sumPriceTotalHtLabel").val(sumTotalHt.toFixed(2).toString().replace(".",","));
                }

            }else {
                $("#sumPriceTotalHtLabel").html("00,00");
                $(".sumPriceTotalHtLabel").val("00,00");
            }


            var sumTotalTaxe = 0;
            $('.sumTotalTaxe').each(function() {
                var value = parseFloat($(this).val().replace(/,/g, "."));
                if (!isNaN(value)) {
                    sumTotalTaxe += value;
                }
            });


            if (sumTotalTaxe > 0){
                //$("#sumTotalTaxeLabel").html(sumTotalTaxe.toFixed(2).toString().replace(".",","));
                //$(".sumTotalTaxeLabel").val(sumTotalTaxe.toFixed(2).toString().replace(".",","));
            }else {
                $("#sumTotalTaxeLabel").html("00,00");
                $(".sumTotalTaxeLabel").val("00,00");
            }*/




        }

    </script>
{% endblock  %}
